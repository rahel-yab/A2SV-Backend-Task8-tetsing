name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: ["1.23", "1.24"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5 # Use the latest stable setup‑go action
        with:
          go-version: "${{ matrix.go-version }}"
          check-latest: false

      - name: Download Go modules
        run: go mod download

      - name: Run tests with coverage & race detection
        run: |
          go test ./domain/... ./infrastructure/... ./repositories/... ./usecases/... -v -coverprofile=coverage.out -covermode=atomic -race
          go tool cover -func=coverage.out

      - name: Check test coverage threshold
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "Test coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 40" | bc -l) )); then
            echo "❌ Test coverage is below 40%"
            exit 1
          else
            echo "✅ Test coverage meets 40%"
          fi

      - name: Run linting
        run: |
          go install golang.org/x/lint/golint@latest
          golint ./domain/... ./infrastructure/... ./repositories/... ./usecases/...

      - name: Run vet
        run: go vet ./domain/... ./infrastructure/... ./repositories/... ./usecases/...

      - name: Check formatting
        run: |
          if [ "$(gofmt -s -l ./domain ./infrastructure ./repositories ./usecases | wc -l)" -gt 0 ]; then
            echo "❌ Code is not properly formatted"
            gofmt -s -d ./domain ./infrastructure ./repositories ./usecases
            exit 1
          else
            echo "✅ Code is properly formatted"
          fi

      - name: Generate coverage report
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Upload test results
        uses: actions/upload-artifact@v4 # Required: use v4 of artifact actions
        if: always()
        with:
          name: test-results-${{ matrix.go-version }}
          path: |
            coverage.out
            coverage.html
